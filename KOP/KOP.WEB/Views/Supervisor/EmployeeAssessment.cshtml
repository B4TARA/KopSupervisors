@model KOP.WEB.Models.ViewModels.Supervisor.EmployeeAssessmentViewModel
@using SystemStatuses = KOP.Common.Enums.SystemStatuses;

@{
	Layout = null;
}

<div class="results_assessment_users_container margin_container_bottom">
	@if (Model.ChooseJudgesAccess)
	{
		<div class="assessment_user_tab_container">
			<div class="choose_assessment_user_container margin_container_bottom" id="choose_assessment_user_container" iduser="@Model.Assessment.UserId">
				<div class="container_description">
					<div class="mid_title">
						Выбор оценщиков
					</div>
					<div class="mid_description">
						Выберите трех коллег, которые будут оценивать корпоративные компетенции данного сотрудника
					</div>
				</div>
				<div class="choose_user_container" id="choose_user_container">
					<div class="select-box">
						<div class="options-container" id="options-container">
							@foreach (var candidate in Model.CandidatesForJudges)
							{
								<div class="option" onclick="optionClick(this)">
									<input type="radio" value="" class="radio" id="film" name="category" disabled />
									<label for="film" class="select_user_assessment" idcol="@candidate.Id">@candidate.FullName</label>
								</div>
							}
						</div>
						<div class="selected_main_wrapper" id="selected_main_wrapper" onclick="selectedContainerOpen()">
							<i class="fa-solid fa-chevron-down"></i>
							@foreach (var choosedCandidate in Model.ChoosedCandidatesForJudges)
							{
								<div class="selected_item_main_wrapper" idcol="@choosedCandidate.Id">
									<div class="description">
										@choosedCandidate.FullName
									</div>
									@if (!choosedCandidate.HasJudged)
									{
										<i class="fa-solid fa-trash delete_item" onclick="deleteUserAssessmentList(this)"></i>
									}
								</div>
							}
						</div>
						<div class="search-box">
							<input type="text" placeholder="" id="input_searchbox_assessment">							
						</div>
					</div>
				</div>
			</div>
		</div>
	}
	<div class="container_description">
		<div class="mid_title">
			Список результатов оценщиков
		</div>
		<div class="mid_description">
			Здесь вы можете отслеживать результаты качественных оценок
		</div>
	</div>
	<div class="results_assessment_main_wrapper">
		<div class="mid_title">Интерпретация результатов оценки управленческих компетенций</div>
		@if (Model.Assessment.AssessmentResults.Any(x => x.SystemStatus == SystemStatuses.COMPLETED))
		{
			<table class="table_popup">
				<thead>
					<tr>
						<th>Балл</th>
						<th>Уровень</th>
						<th>Компетентность</th>
					</tr>
				</thead>

				@if (Model.Assessment.AverageAssessmentInterpretation != null)
				{
					<!-- УКАЗАТЬ КЛАСС ДЛЯ РЕАЛИЗАЦИИ ЦВЕТА СТРОКИ С ПОМОЩЬЮ Model.Assessment.AverageAssessmentInterpretation.HtmlClassName -->
					<tr>
						<td>@Model.Assessment.AverageAssessmentInterpretation.MinValue -@Model.Assessment.AverageAssessmentInterpretation.MaxValue</td>
						<td>@Model.Assessment.AverageAssessmentInterpretation.Level</td>
						<td>@Model.Assessment.AverageAssessmentInterpretation.Competence</td>
					</tr>
				}
				else
				{
					<tr>
						<td>-</td>
						<td>Не удалось определить интерпретацию</td>
						<td>-</td>
					</tr>
				}
			</table>

			foreach (var result in Model.Assessment.AssessmentResults)
			{
				<div class="result_assessment_user_wrapper">
					<div class="user_assessment_wrapper">
						<div class="dropdown_assessment_wrapper" onclick="openDropdownList(this)">
							<div class="user_info_container assessment">
								<div class="user_image" style="background-image:url('@result.Judge.ImagePath');"></div>

								<div class="user_info">
									<div class="mid_title">
										@result.Judge.FullName
									</div>
								</div>

								<!-- УКАЗАТЬ КЛАСС ДЛЯ РЕАЛИЗАЦИИ ЦВЕТА СТРОКИ С ПОМОЩЬЮ result.HtmlClassName -->
								<div class="title @result.HtmlClassName">
									@result.Sum
								</div>
							</div>
							<span class="arrow-dwn_assessment">
								<i class="fa-solid fa-chevron-down"></i>
							</span>
						</div>

						<div class="list-items_assessment">
							<div class="assessment_container">
								<div class="questions_main_wrapper">
									<div class="question_wrapper">
										<table class="table_assessment">
											<thead class="table_header">
												<tr>
													<th class="table_header_elem">
														#
													</th>

													@{
														int count = 0;
														int maxElementsToShow = 2;
													}

													@foreach (var headerElement in result.ElementsByRow[0])
													{
														if (count >= maxElementsToShow)
														{
															break;
														}

														<th class="table_header_elem">@headerElement.Value</th>
														count++;
													}

													<th class="table_header_elem">
														Оценка
													</th>
												</tr>
											</thead>

											<tbody>
												@for (int i = 1; i < result.ElementsByRow.Count(); i++)
												{
													<tr>
														<td>
															@i
														</td>

														@{
															count = 0;
															maxElementsToShow = 2;
														}

														@foreach (var assessmentMatrixElement in result.ElementsByRow[i])
														{
															if (count >= maxElementsToShow)
															{
																break;
															}

															<th class="table_header_elem">@assessmentMatrixElement.Value</th>
															count++;
														}

														<td>
															@if (result.Values.FirstOrDefault(x => x.AssessmentMatrixRow == i) != null)
															{
																<div class="mid_title">@result.Values.First(x => x.AssessmentMatrixRow == i).Value</div>
															}
														</td>
													</tr>
												}
											</tbody>
										</table>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			}
		}
		else
		{
			<!-- НАДО ПОМЕНЯТЬ СТИЛИ (НАЗВАНИЯ)-->
			<div class="empty_image_wrapper admin_panel">
				<img src="/image/EmptyState.png">
			</div>
		}
	</div>

</div>

@if (Model.SupervisorAssessmentResult != null && Model.SupervisorAssessmentResult.SystemStatus == SystemStatuses.PENDING)
{
	<div class="assessment_container" id="assessment_container">
		<div class="questions_main_wrapper">
			<div class="question_wrapper">

				@if (Model.SupervisorAssessmentResult.ElementsByRow.Count() == 0)
				{
					<div class="container_description">
						<div class="mid_title">
							Заполните матрицу качественной оценки
						</div>
						<img src="/image/undefinedpage.svg" alt="default_page">
					</div>
				}
				else
				{
					<div class="container_description">
						<div class="mid_title">
							Качественная оценка
						</div>
						<div class="mid_description">
							Внесите качественную оценка
						</div>
					</div>

					<table class="table_assessment" id="table_assessment" colleagueId="@Model.SupervisorAssessmentResult.Judge.Id">
						<thead class="table_header">
							<tr>
								<th class="table_header_elem">
									#
								</th>

								@{
									int count = 0;
									int maxElementsToShow = 2;
								}

								@foreach (var assessmentMatrixHeaderElement in Model.SupervisorAssessmentResult.ElementsByRow[0])
								{
									if (count >= maxElementsToShow)
									{
										break;
									}

									<th class="table_header_elem">@assessmentMatrixHeaderElement.Value</th>
									count++;
								}
							</tr>
						</thead>
						<tbody>
							@for (int i = 1; i < Model.SupervisorAssessmentResult.ElementsByRow.Count(); i++)
							{
								<tr>
									<td class="competence_description">
										@i
										<span class="info_btn" id="info_btn">
											<div class="show-modal-btn">
												<i class="fa-solid fa-info"></i>
											</div>
										</span>
										<section class="section_popup">
											<div class="modal-box">
												<div class="close_btn close-btn">
													<i class="fa-solid fa-xmark"></i>
												</div>
												<table class="table_info_assessment ">
													<thead class="table_header">
														<tr>
															<th class="table_header_elem">
																#
															</th>

															@foreach (var assessmentMatrixHeaderElement in Model.SupervisorAssessmentResult.ElementsByRow[0])
															{
																<th class="@assessmentMatrixHeaderElement.HtmlClassName">@assessmentMatrixHeaderElement.Value</th>
															}
														</tr>
													</thead>
													<tbody>
														<tr>
															@foreach (var assessmentMatrixElement in Model.SupervisorAssessmentResult.ElementsByRow[i])
															{
																<td class="mid_description">@assessmentMatrixElement.Value</td>
															}
														</tr>
													</tbody>
												</table>
											</div>
										</section>
									</td>

									@{
										count = 0;
										maxElementsToShow = 2;
									}

									@foreach (var assessmentMatrixElement in Model.SupervisorAssessmentResult.ElementsByRow[i])
									{
										if (count >= maxElementsToShow)
										{
											break;
										}

										<td class="mid_description">@assessmentMatrixElement.Value</td>
										count++;
									}

									<td>
										<div class="grade_wrapper">
											<div class="grade">
												<div class="number_wrapper">

													<button class="number-minus" type="button" onclick="this.nextElementSibling.stepDown();">-</button>

													<input required="required" type="number" min="@Model.SupervisorAssessmentResult.MinValue" max="@Model.SupervisorAssessmentResult.MaxValue" value="1" class="mid_description input_assessment_value">

													<button class="number-plus" type="button" onclick="this.previousElementSibling.stepUp();">+</button>
												</div>
											</div>
											<div class="grade_error">
												<i class="fa-solid fa-circle-exclamation" style="color: #f33030;"></i>
												<div class="grade_error_description"></div>
											</div>
										</div>
									</td>
								</tr>
							}
						</tbody>
					</table>

					<div typeAssessment="userJudged" class="action_btn primary_btn assessment" onclick="assessEmployee(this, @Model.Assessment.Id, @Model.SupervisorAssessmentResult.Id, @Model.SupervisorAssessmentResult.Judged.Id)">
						Сохранить
					</div>
				}
			</div>
		</div>
	</div>
}
