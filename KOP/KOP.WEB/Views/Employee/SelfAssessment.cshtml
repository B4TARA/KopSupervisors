@model KOP.WEB.Models.ViewModels.Employee.SelfAssessmentViewModel
@using KOP.Common.Enums

@{
    Layout = null;

    var result = Model.SelfAssessmentResult; // Результат кач. самооценки
    var rows = result.ElementsByRow; // Строки с элементами матрицы + значениями самооценки соответственно строкам
}

<div class="assessment_user_tab_container">
    <div class="choose_assessment_user_container margin_container_bottom">

        @if (result.SystemStatus == SystemStatuses.NOT_EXIST)
        {
            <div class="undefined_page_wrapper">
                <div class="title">
                    Самооценка не назначена
                </div>
                <img src="/image/undefinedpage.svg" alt="default_page">
            </div>
        }
        else if (result.SystemStatus == SystemStatuses.COMPLETED)
        {
            <div class="container_description">
                <div class="mid_title ">
                    Результат
                </div>
                <div class="mid_description">
                    Здесь будут отображены результаты оценки
                </div>
            </div>

            <table class="table_assessment">
                <thead class="table_header">
                    <tr>
                        <th class="table_header_elem">
                            #
                        </th>

                        @foreach (var headerElement in rows[0])
                        {
                            <th class="table_header_elem">
                                @headerElement.Value
                            </th>
                        }

                        <th class="table_header_elem">
                            Средняя оценка
                        </th>
                        <th class="table_header_elem">
                            Моя оценка
                        </th>
                    </tr>
                </thead>

                <tbody>
                    @for (int i = 1; i < rows.Count(); i++)
                    {
                        <tr>
                            <td>
                                @i
                            </td>

                            @foreach (var element in rows[i])
                            {
                                <td class="mid_description">@element.Value</td>
                            }
                            <td>
                                <div class="mid_description">@result.AverageValues.First(x => x.AssessmentMatrixRow == i).Value</div>
                            </td>
                            <td>
                                <div class="mid_description">@result.Values.First(x => x.AssessmentMatrixRow == i).Value</div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else if (result.SystemStatus == SystemStatuses.PENDING)
        {
            <div class="assessment_container">
                <div class="questions_main_wrapper">
                    <div class="question_wrapper">
                        @if (rows.Any())
                        {
                            <div class="container_description">
                                <div class="mid_title">
                                    Качественная оценка
                                </div>
                                <div class="mid_description">
                                    Внесите качественную оценку
                                </div>
                            </div>

                            <table id="table_assessment" class="table_assessment" colleagueId="@result.Judge.Id">
                                <thead class="table_header">
                                    <tr>
                                        <th class="table_header_elem">
                                            #
                                        </th>

                                        @foreach (var headerElement in rows[0])
                                        {
                                            <th class="table_header_elem">@headerElement.Value</th>
                                        }
                                    </tr>
                                </thead>

                                <tbody>
                                    @for (int i = 1; i < rows.Count(); i++)
                                    {
                                        <tr>
                                            <td>@i</td>

                                            @foreach (var element in rows[i])
                                            {
                                                <td class="mid_description">@element.Value</td>
                                            }

                                            <td>
                                                <div class="grade_wrapper">
                                                    <div class="grade">
                                                        <div class="number_wrapper">

                                                            <button class="number-minus" type="button" onclick="this.nextElementSibling.stepDown();">-</button>

                                                            <input required="required" type="number" min="@result.MinValue" max="@result.MaxValue" value="1" class="mid_description input_assessment_value">

                                                            <button class="number-plus" type="button" onclick="this.previousElementSibling.stepUp();">+</button>
                                                        </div>
                                                    </div>
                                                    <div class="grade_error">
                                                        <i class="fa-solid fa-circle-exclamation" style="color: #f33030;"></i>
                                                        <div class="grade_error_description"></div>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>

                            <div typeAssessment="userJudged" class="action_btn primary_btn assessment" onclick="assessEmployee(this, @result.AssessmentId, @result.Id, @result.Judged.Id, true)">
                                Сохранить
                            </div>
                        }
                        else
                        {
                            <div class="container_description">
                                <div class="mid_title">
                                    Заполните матрицу качественной оценки
                                </div>

                                <img src="/image/undefinedpage.svg" alt="default_page">
                            </div>

                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>